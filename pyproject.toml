[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core>=3,<4"]

[project]
authors = [
  {name = "Delgan", email = "delgan.py@gmail.com"}
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Topic :: System :: Logging",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.5",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = [
  "colorama>=0.3.4 ; sys_platform=='win32'",
  "aiocontextvars>=0.2.0 ; python_version<'3.7'",
  "win32-setctime>=1.0.0 ; sys_platform=='win32'"
]
description = "Python logging made (stupidly) simple"
dynamic = ['version']
keywords = ["loguru", "logging", "logger", "log"]
license = {text = "MIT"}
name = "loguru"
readme = 'README.rst'
requires-python = ">=3.5,<4.0"

[project.optional-dependencies]
dev = [
  # Setup.
  "pre-commit==3.8.0 ; python_version>='3.9'",
  "tox==3.27.1 ; python_version<'3.8'",
  "tox==4.21.0 ; python_version>='3.8'",
  # Testing framework.
  "pytest==6.1.2 ; python_version<'3.8'",
  "pytest==8.3.2 ; python_version>='3.8'",
  "pytest-cov==2.12.1 ; python_version<'3.8'",
  "pytest-cov==5.0.0 ; python_version>='3.8'",
  "pytest-mypy-plugins==1.9.3 ; python_version>='3.6' and python_version<'3.8'",
  "pytest-mypy-plugins==3.1.0 ; python_version>='3.8'",
  # Testing utils.
  "colorama==0.4.5 ; python_version<'3.8'",
  "colorama==0.4.6 ; python_version>='3.8'",
  "freezegun==1.1.0 ; python_version<'3.8'",
  "freezegun==1.5.0 ; python_version>='3.8'",
  "exceptiongroup==1.1.3 ; python_version>='3.7' and python_version<'3.11'",
  # Type checking.
  "mypy==v0.910 ; python_version<'3.6'",
  "mypy==v0.971 ; python_version>='3.6' and python_version<'3.7'",
  "mypy==v1.4.1 ; python_version>='3.7' and python_version<'3.8'",
  "mypy==v1.11.2 ; python_version>='3.8'",
  # Docs.
  "Sphinx==7.3.7 ; python_version>='3.9'",
  "sphinx-autobuild==2024.4.16 ; python_version>='3.9'",
  "sphinx-rtd-theme==2.0.0 ; python_version>='3.9'"
]

[project.urls]
Changelog = "https://github.com/Delgan/loguru/blob/master/CHANGELOG.rst"
Documentation = "https://loguru.readthedocs.io/en/stable/index.html"
Homepage = "https://github.com/Delgan/loguru"

[tool.black]
force-exclude = "tests/exceptions/source/modern/*"
line-length = 100
target-version = ["py35"]

[tool.flit.module]
name = "loguru"

[tool.mypy]
strict = true

[tool.pytest.ini_options]
addopts = "-l"
filterwarnings = [
  # By default all warnings are treated as errors.
  'error',
  # Mixing threads and "fork()" is deprecated, but we need to test it anyway.
  'ignore:.*use of fork\(\) may lead to deadlocks in the child.*:DeprecationWarning'
]
testpaths = ["tests"]

[tool.ruff]
exclude = ["tests/exceptions/source/*"]
line-length = 100
# Enforce pyflakes(F), pycodestyle(E, W), isort (I), bugbears (B), and pep8-naming (N) rules.
select = ["F", "E", "W", "I", "B", "N", "RET"]

[tool.ruff.pycodestyle]
max-doc-length = 100

[tool.typos.default]
extend-ignore-re = ["(?Rm)^.*# spellchecker: disable-line$"]

[tool.typos.files]
extend-exclude = ["tests/exceptions/output/**"]  # False positive due to ansi sequences.
